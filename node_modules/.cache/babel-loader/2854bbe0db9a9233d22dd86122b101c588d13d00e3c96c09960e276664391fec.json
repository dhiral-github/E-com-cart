{"ast":null,"code":"var _jsxFileName = \"/Users/mohitmac/Documents/dhiral/e-com-cart/src/components/CountryList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport Select from \"react-select\";\nimport { Country, State, City } from 'country-state-city';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CountryList() {\n  _s();\n  const addressFromik = useFormik({\n    initialValues: {\n      country: \"India\",\n      state: null,\n      city: null\n    },\n    onSubmit: values => console.log(JSON.stringify(values))\n  });\n  const countries = Country.getAllCountries();\n  const updatedCountries = countries.map(country => ({\n    label: country.name,\n    // console.log(\"first\")\n    value: country.id,\n    ...country\n  }));\n  console.log(\"updateCountries\", updatedCountries);\n  const updatedStates = countryId => State.getStatesOfCountry(countryId).map(state => ({\n    label: state.name,\n    value: state.id,\n    ...state\n  }));\n  const updatedCities = stateId => City.getCitiesOfState(stateId).map(city => ({\n    label: city.name,\n    value: city.id,\n    ...city\n  }));\n  const {\n    values,\n    handleSubmit,\n    setFieldValue,\n    setValues\n  } = addressFromik;\n  useEffect(() => {}, [values]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundColor: 'yellow',\n      height: '100px',\n      width: '500px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        id: \"country\",\n        name: \"country\",\n        label: \"country\",\n        options: updatedCountries,\n        value: values.country\n        // onChange={value => {\n        //   setFieldValue(\"country\", value);\n        //   setFieldValue(\"state\", null);\n        //   setFieldValue(\"city\", null);\n        // }}\n        ,\n        onChange: value => {\n          setValues({\n            country: value,\n            state: null,\n            city: null\n          }, false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        id: \"state\",\n        name: \"state\",\n        options: updatedStates(values.country ? values.country.values : null),\n        value: values.state,\n        onChange: value => {\n          setValues({\n            state: value,\n            city: null\n          }, false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        id: \"city\",\n        name: \"city\",\n        options: updatedCities(values.state ? values.state.value : null),\n        value: values.city,\n        onChange: value => setFieldValue(\"city\", value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(CountryList, \"sHNEWIcgQyPJb99T7cPf1Vf/6Lk=\", false, function () {\n  return [useFormik];\n});\n_c = CountryList;\nvar _c;\n$RefreshReg$(_c, \"CountryList\");","map":{"version":3,"names":["React","useEffect","useFormik","Select","Country","State","City","CountryList","addressFromik","initialValues","country","state","city","onSubmit","values","console","log","JSON","stringify","countries","getAllCountries","updatedCountries","map","label","name","value","id","updatedStates","countryId","getStatesOfCountry","updatedCities","stateId","getCitiesOfState","handleSubmit","setFieldValue","setValues","backgroundColor","height","width"],"sources":["/Users/mohitmac/Documents/dhiral/e-com-cart/src/components/CountryList.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Select from \"react-select\";\r\nimport { Country, State, City } from 'country-state-city';\r\n\r\nexport default function CountryList() {\r\n  const addressFromik = useFormik({\r\n    initialValues: {\r\n      country: \"India\",\r\n      state: null,\r\n      city: null\r\n    },\r\n    onSubmit: (values) =>\r\n      console.log(JSON.stringify(values))\r\n  });\r\n\r\n  const countries = Country.getAllCountries();\r\n\r\n  const updatedCountries = countries.map((country) => ({\r\n    label: country.name,\r\n    // console.log(\"first\")\r\n    value: country.id,\r\n    ...country\r\n  }));\r\n\r\n  console.log(\"updateCountries\", updatedCountries)\r\n\r\n  const updatedStates = (countryId) =>\r\n    State.getStatesOfCountry(countryId).map((state) => ({\r\n      label: state.name,\r\n      value: state.id,\r\n      ...state\r\n    }));\r\n  const updatedCities = (stateId) =>\r\n    City.getCitiesOfState(stateId).map((city) => ({\r\n      label: city.name,\r\n      value: city.id,\r\n      ...city\r\n    }));\r\n\r\n  const { values, handleSubmit, setFieldValue, setValues } = addressFromik;\r\n\r\n  useEffect(() => {\r\n\r\n  }, [values]);\r\n\r\n  return (\r\n    <div className=\"App\" style={{ backgroundColor: 'yellow', height: '100px', width: '500px' }}>\r\n      <form onSubmit={handleSubmit}>\r\n        <Select\r\n          id=\"country\"\r\n          name=\"country\"\r\n          label=\"country\"\r\n          options={updatedCountries}\r\n          value={values.country}\r\n          // onChange={value => {\r\n          //   setFieldValue(\"country\", value);\r\n          //   setFieldValue(\"state\", null);\r\n          //   setFieldValue(\"city\", null);\r\n          // }}\r\n          onChange={(value) => {\r\n            setValues({\r\n              country: value, state: null, city: null\r\n            }, false);\r\n          }}\r\n        />\r\n        <Select\r\n          id=\"state\"\r\n          name=\"state\"\r\n          options={updatedStates(values.country ? values.country.values : null)}\r\n          value={values.state}\r\n          onChange={(value) => {\r\n            setValues({\r\n              state: value, city: null\r\n            }, false);\r\n          }}\r\n        />\r\n        <Select\r\n          id=\"city\"\r\n          name=\"city\"\r\n          options={updatedCities(values.state ? values.state.value : null)}\r\n          value={values.city}\r\n          onChange={(value) =>\r\n            setFieldValue(\"city\", value)}\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n        {/* <p>{JSON.stringify(csc.get)}</p> */}\r\n      </form>\r\n    </div >\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,QAAQ;AAClC,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,OAAO,EAAEC,KAAK,EAAEC,IAAI,QAAQ,oBAAoB;AAAC;AAE1D,eAAe,SAASC,WAAW,GAAG;EAAA;EACpC,MAAMC,aAAa,GAAGN,SAAS,CAAC;IAC9BO,aAAa,EAAE;MACbC,OAAO,EAAE,OAAO;MAChBC,KAAK,EAAE,IAAI;MACXC,IAAI,EAAE;IACR,CAAC;IACDC,QAAQ,EAAGC,MAAM,IACfC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACJ,MAAM,CAAC;EACtC,CAAC,CAAC;EAEF,MAAMK,SAAS,GAAGf,OAAO,CAACgB,eAAe,EAAE;EAE3C,MAAMC,gBAAgB,GAAGF,SAAS,CAACG,GAAG,CAAEZ,OAAO,KAAM;IACnDa,KAAK,EAAEb,OAAO,CAACc,IAAI;IACnB;IACAC,KAAK,EAAEf,OAAO,CAACgB,EAAE;IACjB,GAAGhB;EACL,CAAC,CAAC,CAAC;EAEHK,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEK,gBAAgB,CAAC;EAEhD,MAAMM,aAAa,GAAIC,SAAS,IAC9BvB,KAAK,CAACwB,kBAAkB,CAACD,SAAS,CAAC,CAACN,GAAG,CAAEX,KAAK,KAAM;IAClDY,KAAK,EAAEZ,KAAK,CAACa,IAAI;IACjBC,KAAK,EAAEd,KAAK,CAACe,EAAE;IACf,GAAGf;EACL,CAAC,CAAC,CAAC;EACL,MAAMmB,aAAa,GAAIC,OAAO,IAC5BzB,IAAI,CAAC0B,gBAAgB,CAACD,OAAO,CAAC,CAACT,GAAG,CAAEV,IAAI,KAAM;IAC5CW,KAAK,EAAEX,IAAI,CAACY,IAAI;IAChBC,KAAK,EAAEb,IAAI,CAACc,EAAE;IACd,GAAGd;EACL,CAAC,CAAC,CAAC;EAEL,MAAM;IAAEE,MAAM;IAAEmB,YAAY;IAAEC,aAAa;IAAEC;EAAU,CAAC,GAAG3B,aAAa;EAExEP,SAAS,CAAC,MAAM,CAEhB,CAAC,EAAE,CAACa,MAAM,CAAC,CAAC;EAEZ,oBACE;IAAK,SAAS,EAAC,KAAK;IAAC,KAAK,EAAE;MAAEsB,eAAe,EAAE,QAAQ;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAQ,CAAE;IAAA,uBACzF;MAAM,QAAQ,EAAEL,YAAa;MAAA,wBAC3B,QAAC,MAAM;QACL,EAAE,EAAC,SAAS;QACZ,IAAI,EAAC,SAAS;QACd,KAAK,EAAC,SAAS;QACf,OAAO,EAAEZ,gBAAiB;QAC1B,KAAK,EAAEP,MAAM,CAACJ;QACd;QACA;QACA;QACA;QACA;QAAA;QACA,QAAQ,EAAGe,KAAK,IAAK;UACnBU,SAAS,CAAC;YACRzB,OAAO,EAAEe,KAAK;YAAEd,KAAK,EAAE,IAAI;YAAEC,IAAI,EAAE;UACrC,CAAC,EAAE,KAAK,CAAC;QACX;MAAE;QAAA;QAAA;QAAA;MAAA,QACF,eACF,QAAC,MAAM;QACL,EAAE,EAAC,OAAO;QACV,IAAI,EAAC,OAAO;QACZ,OAAO,EAAEe,aAAa,CAACb,MAAM,CAACJ,OAAO,GAAGI,MAAM,CAACJ,OAAO,CAACI,MAAM,GAAG,IAAI,CAAE;QACtE,KAAK,EAAEA,MAAM,CAACH,KAAM;QACpB,QAAQ,EAAGc,KAAK,IAAK;UACnBU,SAAS,CAAC;YACRxB,KAAK,EAAEc,KAAK;YAAEb,IAAI,EAAE;UACtB,CAAC,EAAE,KAAK,CAAC;QACX;MAAE;QAAA;QAAA;QAAA;MAAA,QACF,eACF,QAAC,MAAM;QACL,EAAE,EAAC,MAAM;QACT,IAAI,EAAC,MAAM;QACX,OAAO,EAAEkB,aAAa,CAAChB,MAAM,CAACH,KAAK,GAAGG,MAAM,CAACH,KAAK,CAACc,KAAK,GAAG,IAAI,CAAE;QACjE,KAAK,EAAEX,MAAM,CAACF,IAAK;QACnB,QAAQ,EAAGa,KAAK,IACdS,aAAa,CAAC,MAAM,EAAET,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC/B,eACF;QAAQ,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA;MAAA;MAAA;MAAA;IAAA;EAEhC;IAAA;IAAA;IAAA;EAAA,QACF;AAEX;AAAC,GArFuBlB,WAAW;EAAA,QACXL,SAAS;AAAA;AAAA,KADTK,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}