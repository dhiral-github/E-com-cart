{"ast":null,"code":"/**\n * @author Matthew Caruana Galizia <m@m.cg>\n * @license MIT: http://mattcg.mit-license.org/\n * @copyright Copyright (c) 2013, Matthew Caruana Galizia\n */\n\n/*jshint node:true*/\n\n'use strict';\n\nvar index = require('language-subtag-registry/data/json/index.json');\nvar registry = require('language-subtag-registry/data/json/registry.json');\nvar Subtag = require('./Subtag.js');\nclass Tag {\n  static ERR_DEPRECATED = 1;\n  static ERR_NO_LANGUAGE = 2;\n  static ERR_UNKNOWN = 3;\n  static ERR_TOO_LONG = 4;\n  static ERR_EXTRA_REGION = 5;\n  static ERR_EXTRA_EXTLANG = 6;\n  static ERR_EXTRA_SCRIPT = 7;\n  static ERR_DUPLICATE_VARIANT = 8;\n  static ERR_WRONG_ORDER = 9;\n  static ERR_SUPPRESS_SCRIPT = 10;\n  static ERR_SUBTAG_DEPRECATED = 11;\n  static ERR_EXTRA_LANGUAGE = 12;\n\n  /** @param {string} tag */\n  constructor(tag) {\n    var types;\n\n    // Lowercase for consistency (case is only a formatting convention, not a standard requirement).\n    tag = tag.trim().toLowerCase();\n    this.data = {\n      tag\n    };\n\n    // Check if the input tag is grandfathered or redundant.\n    types = index[tag];\n    if (types && (types.grandfathered || types.redundant)) {\n      this.data.record = registry[types.grandfathered || types.redundant];\n    }\n  }\n  preferred() {\n    var preferred = this.data.record['Preferred-Value'];\n    if (preferred) {\n      return new Tag(preferred);\n    }\n    return null;\n  }\n\n  /** @return {Subtag[]} */\n  subtags() {\n    var codes,\n      data = this.data,\n      subtags = [];\n\n    // No subtags if the tag is grandfathered.\n    if (data.record && this.type() === 'grandfathered') {\n      return subtags;\n    }\n    codes = data.tag.split('-');\n    if (!codes.length) {\n      return subtags;\n    }\n\n    // Try and find the language tag.\n    codes.some(function (code, i) {\n      var types;\n\n      // Singletons and anything after are unhandled.\n      if (code.length < 2) {\n        return true; // Stop the loop (stop processing after a singleton).\n      }\n\n      types = index[code];\n\n      // Check for non-existent tag.\n      if (!types) {\n        return; // Skip to the next item.\n      }\n\n      // Check against undefined because value could be 0.\n      // Language subtags may only appear at the beginning of the tag, otherwise the subtag type is indeterminate.\n      if (0 === i && undefined !== types.language) {\n        subtags.push(new Subtag(code, 'language'));\n        return;\n      }\n      switch (code.length) {\n        case 2:\n          // Should be a region.\n          if (types.region) {\n            subtags.push(new Subtag(code, 'region'));\n\n            // Error case: language subtag in the wrong place.\n          } else if (types.language) {\n            subtags.push(new Subtag(code, 'language'));\n          }\n          break;\n        case 3:\n          // Could be a numeric region code e.g. '001' for 'World'.\n          if (types.region) {\n            subtags.push(new Subtag(code, 'region'));\n          } else if (types.extlang) {\n            subtags.push(new Subtag(code, 'extlang'));\n\n            // Error case: language subtag in the wrong place.\n          } else if (types.language) {\n            subtags.push(new Subtag(code, 'language'));\n          }\n          break;\n        case 4:\n          // Could be a numeric variant.\n          if (types.variant) {\n            subtags.push(new Subtag(code, 'variant'));\n          } else if (types.script) {\n            subtags.push(new Subtag(code, 'script'));\n          }\n          break;\n        default:\n          // Should be a variant.\n          if (types.variant) {\n            subtags.push(new Subtag(code, 'variant'));\n          }\n          break;\n      }\n    });\n    return subtags;\n  }\n  language() {\n    return this.find('language');\n  }\n  region() {\n    return this.find('region');\n  }\n  script() {\n    return this.find('script');\n  }\n\n  /** @param {string} type */\n  find(type) {\n    var i,\n      l,\n      subtag,\n      subtags = this.subtags();\n    for (i = 0, l = subtags.length; i < l; i++) {\n      subtag = subtags[i];\n      if (subtag.type() === type) {\n        return subtag;\n      }\n    }\n  }\n  valid() {\n    return this.errors().length < 1;\n  }\n  errors() {\n    var error,\n      subtags,\n      data = this.data,\n      errors = [];\n    error = function (code, subtag) {\n      var err, message;\n      switch (code) {\n        case Tag.ERR_DEPRECATED:\n          message = 'The tag \\'' + data.tag + '\\' is deprecated.';\n\n          // Note that a record that contains a 'Deprecated' field and no corresponding 'Preferred-Value' field has no replacement mapping (RFC 5646 section 3.1.6).\n          if (data.record['Preferred-Value']) {\n            message += ' Use \\'' + data.record['Preferred-Value'] + '\\' instead.';\n          }\n          break;\n        case Tag.ERR_SUBTAG_DEPRECATED:\n          message = 'The subtag \\'' + subtag + '\\' is deprecated.';\n          break;\n        case Tag.ERR_NO_LANGUAGE:\n          if (!data.tag) {\n            message = 'Empty tag.';\n          } else {\n            message = 'Missing language tag in \\'' + data.tag + '\\'.';\n          }\n          break;\n        case Tag.ERR_UNKNOWN:\n          message = 'Unknown code \\'' + subtag + '\\'';\n          break;\n        case Tag.ERR_TOO_LONG:\n          message = 'The private-use subtag \\'' + subtag + '\\' is too long.';\n          break;\n        case Tag.ERR_EXTRA_LANGUAGE:\n        case Tag.ERR_EXTRA_EXTLANG:\n        case Tag.ERR_EXTRA_REGION:\n        case Tag.ERR_EXTRA_SCRIPT:\n          message = 'Extra ' + subtag.type() + ' subtag \\'' + subtag + '\\' found.';\n          break;\n        case Tag.ERR_DUPLICATE_VARIANT:\n          message = 'Duplicate variant subtag \\'' + subtag + '\\' found.';\n          break;\n        case Tag.ERR_WRONG_ORDER:\n          message = 'The subtag \\'' + subtag[0] + '\\' should not appear before \\'' + subtag[1] + '\\'.';\n          break;\n        case Tag.ERR_SUPPRESS_SCRIPT:\n          message = 'The script subtag \\'' + subtag + '\\' is the same as the language suppress-script.';\n          break;\n      }\n      err = new Error(message);\n      err.code = code;\n      err.tag = data.tag;\n      err.subtag = subtag;\n      errors.push(err);\n    };\n\n    // Check if the tag is grandfathered and if the grandfathered tag is deprecated (e.g. no-nyn).\n    if (data.record) {\n      if (data.record.Deprecated) {\n        error(Tag.ERR_DEPRECATED);\n      }\n\n      // Only check every subtag if the tag is not explicitly listed as grandfathered or redundant.\n      return errors;\n    }\n\n    // Check that all subtag codes are meaningful.\n    data.tag.split('-').some(function (code, i, codes) {\n      var types;\n\n      // Ignore anything after a singleton.\n      if (code.length < 2) {\n        // Check that each private-use subtag is within the maximum allowed length.\n        codes.slice(i).forEach(function (code) {\n          if (code.length > 8) {\n            error(Tag.ERR_TOO_LONG, code);\n          }\n        });\n        return true;\n      }\n      types = index[code];\n      if (!types) {\n        error(Tag.ERR_UNKNOWN, code);\n      }\n      return false; // Continue to the next item.\n    });\n\n    // Check that first tag is a language tag.\n    subtags = this.subtags();\n    if (!subtags.length || 'language' !== subtags[0].type()) {\n      error(Tag.ERR_NO_LANGUAGE);\n      return errors;\n    }\n\n    // Check for more than one of some types and for deprecation.\n    subtags.forEach(function (subtag, i) {\n      var type = subtag.type(),\n        language,\n        script,\n        found = this;\n      if (subtag.deprecated()) {\n        error(Tag.ERR_SUBTAG_DEPRECATED, subtag);\n      }\n      if (found[type]) {\n        found[type].push(subtag);\n      }\n      switch (type) {\n        case 'language':\n          if (found.language.length > 1) {\n            error(Tag.ERR_EXTRA_LANGUAGE, subtag);\n          }\n          break;\n        case 'region':\n          if (found.region.length > 1) {\n            error(Tag.ERR_EXTRA_REGION, subtag);\n          }\n          break;\n        case 'extlang':\n          if (found.extlang.length > 1) {\n            error(Tag.ERR_EXTRA_EXTLANG, subtag);\n          }\n          break;\n        case 'script':\n          if (found.script.length > 1) {\n            error(Tag.ERR_EXTRA_SCRIPT, subtag);\n\n            // Check if script is same as language suppress-script.\n          } else {\n            language = subtags[0];\n            if ('language' === language.type()) {\n              script = language.script();\n              if (script && script.format() === subtag.format()) {\n                error(Tag.ERR_SUPPRESS_SCRIPT, subtag);\n              }\n            }\n          }\n          break;\n        case 'variant':\n          if (found.variant.length > 1 && found.variant.some(function (variant) {\n            return variant.format() === subtag.format();\n          })) {\n            error(Tag.ERR_DUPLICATE_VARIANT, subtag);\n          }\n      }\n    }, {\n      language: [],\n      extlang: [],\n      variant: [],\n      script: [],\n      region: []\n    });\n\n    // Check for correct order.\n    subtags.forEach(function (subtag, i, subtags) {\n      var priority = this,\n        next = subtags[i + 1];\n      if (next && priority[subtag.type()] > priority[next.type()]) {\n        error(Tag.ERR_WRONG_ORDER, [subtag, next]);\n      }\n    }, {\n      language: 4,\n      extlang: 5,\n      script: 6,\n      region: 7,\n      variant: 8\n    });\n    return errors;\n  }\n  type() {\n    var record = this.data.record;\n    if (record) {\n      return record.Type;\n    }\n    return 'tag';\n  }\n  added() {\n    var record = this.data.record;\n    return record && record.Added;\n  }\n  deprecated() {\n    var record = this.data.record;\n    return record && record.Deprecated;\n  }\n  descriptions() {\n    var record = this.data.record;\n    if (record && record.Description) {\n      return record.Description;\n    }\n    return [];\n  }\n  format() {\n    var tag = this.data.tag;\n\n    // Format according to algorithm defined in RFC 5646 section 2.1.1.\n    return tag.split('-').reduce(function (p, c, i, a) {\n      if (i === 0) {\n        return c;\n      }\n      if (a[i - 1].length === 1) {\n        return p + '-' + c;\n      }\n      switch (c.length) {\n        case 2:\n          return p + '-' + c.toUpperCase();\n        case 4:\n          return p + '-' + c[0].toUpperCase() + c.substr(1);\n      }\n      return p + '-' + c;\n    });\n  }\n}\nmodule.exports = Tag;","map":{"version":3,"names":["index","require","registry","Subtag","Tag","ERR_DEPRECATED","ERR_NO_LANGUAGE","ERR_UNKNOWN","ERR_TOO_LONG","ERR_EXTRA_REGION","ERR_EXTRA_EXTLANG","ERR_EXTRA_SCRIPT","ERR_DUPLICATE_VARIANT","ERR_WRONG_ORDER","ERR_SUPPRESS_SCRIPT","ERR_SUBTAG_DEPRECATED","ERR_EXTRA_LANGUAGE","constructor","tag","types","trim","toLowerCase","data","grandfathered","redundant","record","preferred","subtags","codes","type","split","length","some","code","i","undefined","language","push","region","extlang","variant","script","find","l","subtag","valid","errors","error","err","message","Error","Deprecated","slice","forEach","found","deprecated","format","priority","next","Type","added","Added","descriptions","Description","reduce","p","c","a","toUpperCase","substr","module","exports"],"sources":["/Users/mohitmac/Documents/dhiral/e-com-cart/node_modules/language-tags/lib/Tag.js"],"sourcesContent":["/**\n * @author Matthew Caruana Galizia <m@m.cg>\n * @license MIT: http://mattcg.mit-license.org/\n * @copyright Copyright (c) 2013, Matthew Caruana Galizia\n */\n\n/*jshint node:true*/\n\n'use strict';\n\nvar index = require('language-subtag-registry/data/json/index.json');\nvar registry = require('language-subtag-registry/data/json/registry.json');\n\nvar Subtag = require('./Subtag.js');\n\nclass Tag {\n\tstatic ERR_DEPRECATED = 1;\n\tstatic ERR_NO_LANGUAGE = 2;\n\tstatic ERR_UNKNOWN = 3;\n\tstatic ERR_TOO_LONG = 4;\n\tstatic ERR_EXTRA_REGION = 5;\n\tstatic ERR_EXTRA_EXTLANG = 6;\n\tstatic ERR_EXTRA_SCRIPT = 7;\n\tstatic ERR_DUPLICATE_VARIANT = 8;\n\tstatic ERR_WRONG_ORDER = 9;\n\tstatic ERR_SUPPRESS_SCRIPT = 10;\n\tstatic ERR_SUBTAG_DEPRECATED = 11;\n\tstatic ERR_EXTRA_LANGUAGE = 12;\n\n\t/** @param {string} tag */\n\tconstructor (tag) {\n\t\tvar types;\n\n\t\t// Lowercase for consistency (case is only a formatting convention, not a standard requirement).\n\t\ttag = tag.trim().toLowerCase();\n\n\t\tthis.data = { tag };\n\n\t\t// Check if the input tag is grandfathered or redundant.\n\t\ttypes = index[tag];\n\t\tif (types && (types.grandfathered || types.redundant)) {\n\t\t\tthis.data.record = registry[types.grandfathered || types.redundant];\n\t\t}\n\t}\n\n\tpreferred () {\n\t\tvar preferred = this.data.record['Preferred-Value'];\n\n\t\tif (preferred) {\n\t\t\treturn new Tag(preferred);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/** @return {Subtag[]} */\n\tsubtags () {\n\t\tvar codes, data = this.data, subtags = [];\n\n\t\t// No subtags if the tag is grandfathered.\n\t\tif (data.record && this.type() === 'grandfathered') {\n\t\t\treturn subtags;\n\t\t}\n\n\t\tcodes = data.tag.split('-');\n\t\tif (!codes.length) {\n\t\t\treturn subtags;\n\t\t}\n\n\t\t// Try and find the language tag.\n\t\tcodes.some(function (code, i) {\n\t\t\tvar types;\n\n\t\t\t// Singletons and anything after are unhandled.\n\t\t\tif (code.length < 2) {\n\t\t\t\treturn true; // Stop the loop (stop processing after a singleton).\n\t\t\t}\n\n\t\t\ttypes = index[code];\n\n\t\t\t// Check for non-existent tag.\n\t\t\tif (!types) {\n\t\t\t\treturn; // Skip to the next item.\n\t\t\t}\n\n\t\t\t// Check against undefined because value could be 0.\n\t\t\t// Language subtags may only appear at the beginning of the tag, otherwise the subtag type is indeterminate.\n\t\t\tif (0 === i && undefined !== types.language) {\n\t\t\t\tsubtags.push(new Subtag(code, 'language'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tswitch (code.length) {\n\t\t\t\tcase 2:\n\n\t\t\t\t\t// Should be a region.\n\t\t\t\t\tif (types.region) {\n\t\t\t\t\t\tsubtags.push(new Subtag(code, 'region'));\n\n\t\t\t\t\t\t// Error case: language subtag in the wrong place.\n\t\t\t\t\t} else if (types.language) {\n\t\t\t\t\t\tsubtags.push(new Subtag(code, 'language'));\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\n\t\t\t\t\t// Could be a numeric region code e.g. '001' for 'World'.\n\t\t\t\t\tif (types.region) {\n\t\t\t\t\t\tsubtags.push(new Subtag(code, 'region'));\n\t\t\t\t\t} else if (types.extlang) {\n\t\t\t\t\t\tsubtags.push(new Subtag(code, 'extlang'));\n\n\t\t\t\t\t\t// Error case: language subtag in the wrong place.\n\t\t\t\t\t} else if (types.language) {\n\t\t\t\t\t\tsubtags.push(new Subtag(code, 'language'));\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\n\t\t\t\t\t// Could be a numeric variant.\n\t\t\t\t\tif (types.variant) {\n\t\t\t\t\t\tsubtags.push(new Subtag(code, 'variant'));\n\t\t\t\t\t} else if (types.script) {\n\t\t\t\t\t\tsubtags.push(new Subtag(code, 'script'));\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\n\t\t\t\t\t// Should be a variant.\n\t\t\t\t\tif (types.variant) {\n\t\t\t\t\t\tsubtags.push(new Subtag(code, 'variant'));\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn subtags;\n\t}\n\n\tlanguage () {\n\t\treturn this.find('language');\n\t}\n\n\tregion () {\n\t\treturn this.find('region');\n\t}\n\n\tscript () {\n\t\treturn this.find('script');\n\t}\n\n\t/** @param {string} type */\n\tfind (type) {\n\t\tvar i, l, subtag, subtags = this.subtags();\n\n\t\tfor (i = 0, l = subtags.length; i < l; i++) {\n\t\t\tsubtag = subtags[i];\n\n\t\t\tif (subtag.type() === type) {\n\t\t\t\treturn subtag;\n\t\t\t}\n\t\t}\n\t}\n\n\tvalid () {\n\t\treturn this.errors().length < 1;\n\t}\n\n\terrors () {\n\t\tvar error, subtags, data = this.data, errors = [];\n\n\t\terror = function (code, subtag) {\n\t\t\tvar err, message;\n\n\t\t\tswitch (code) {\n\t\t\t\tcase Tag.ERR_DEPRECATED:\n\t\t\t\t\tmessage = 'The tag \\'' + data.tag + '\\' is deprecated.';\n\n\t\t\t\t\t// Note that a record that contains a 'Deprecated' field and no corresponding 'Preferred-Value' field has no replacement mapping (RFC 5646 section 3.1.6).\n\t\t\t\t\tif (data.record['Preferred-Value']) {\n\t\t\t\t\t\tmessage += ' Use \\'' + data.record['Preferred-Value'] + '\\' instead.';\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tag.ERR_SUBTAG_DEPRECATED:\n\t\t\t\t\tmessage = 'The subtag \\'' + subtag + '\\' is deprecated.';\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tag.ERR_NO_LANGUAGE:\n\t\t\t\t\tif (!data.tag) {\n\t\t\t\t\t\tmessage = 'Empty tag.';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmessage = 'Missing language tag in \\'' + data.tag + '\\'.';\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tag.ERR_UNKNOWN:\n\t\t\t\t\tmessage = 'Unknown code \\'' + subtag + '\\'';\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tag.ERR_TOO_LONG:\n\t\t\t\t\tmessage = 'The private-use subtag \\'' + subtag + '\\' is too long.';\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tag.ERR_EXTRA_LANGUAGE:\n\t\t\t\tcase Tag.ERR_EXTRA_EXTLANG:\n\t\t\t\tcase Tag.ERR_EXTRA_REGION:\n\t\t\t\tcase Tag.ERR_EXTRA_SCRIPT:\n\t\t\t\t\tmessage = 'Extra ' + subtag.type() + ' subtag \\'' + subtag + '\\' found.';\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tag.ERR_DUPLICATE_VARIANT:\n\t\t\t\t\tmessage = 'Duplicate variant subtag \\'' + subtag + '\\' found.';\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tag.ERR_WRONG_ORDER:\n\t\t\t\t\tmessage = 'The subtag \\'' + subtag[0] + '\\' should not appear before \\'' + subtag[1] + '\\'.';\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tag.ERR_SUPPRESS_SCRIPT:\n\t\t\t\t\tmessage = 'The script subtag \\'' + subtag + '\\' is the same as the language suppress-script.';\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\terr = new Error(message);\n\t\t\terr.code = code;\n\t\t\terr.tag = data.tag;\n\t\t\terr.subtag = subtag;\n\t\t\terrors.push(err);\n\t\t};\n\n\t\t// Check if the tag is grandfathered and if the grandfathered tag is deprecated (e.g. no-nyn).\n\t\tif (data.record) {\n\t\t\tif (data.record.Deprecated) {\n\t\t\t\terror(Tag.ERR_DEPRECATED);\n\t\t\t}\n\n\t\t\t// Only check every subtag if the tag is not explicitly listed as grandfathered or redundant.\n\t\t\treturn errors;\n\t\t}\n\n\t\t// Check that all subtag codes are meaningful.\n\t\tdata.tag.split('-').some(function (code, i, codes) {\n\t\t\tvar types;\n\n\t\t\t// Ignore anything after a singleton.\n\t\t\tif (code.length < 2) {\n\n\t\t\t\t// Check that each private-use subtag is within the maximum allowed length.\n\t\t\t\tcodes.slice(i).forEach(function (code) {\n\t\t\t\t\tif (code.length > 8) {\n\t\t\t\t\t\terror(Tag.ERR_TOO_LONG, code);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\ttypes = index[code];\n\t\t\tif (!types) {\n\t\t\t\terror(Tag.ERR_UNKNOWN, code);\n\t\t\t}\n\n\t\t\treturn false; // Continue to the next item.\n\t\t});\n\n\t\t// Check that first tag is a language tag.\n\t\tsubtags = this.subtags();\n\t\tif (!subtags.length || 'language' !== subtags[0].type()) {\n\t\t\terror(Tag.ERR_NO_LANGUAGE);\n\t\t\treturn errors;\n\t\t}\n\n\t\t// Check for more than one of some types and for deprecation.\n\t\tsubtags.forEach(function (subtag, i) {\n\t\t\tvar type = subtag.type(), language, script, found = this;\n\n\t\t\tif (subtag.deprecated()) {\n\t\t\t\terror(Tag.ERR_SUBTAG_DEPRECATED, subtag);\n\t\t\t}\n\n\t\t\tif (found[type]) {\n\t\t\t\tfound[type].push(subtag);\n\t\t\t}\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'language':\n\t\t\t\t\tif (found.language.length > 1) {\n\t\t\t\t\t\terror(Tag.ERR_EXTRA_LANGUAGE, subtag);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'region':\n\t\t\t\t\tif (found.region.length > 1) {\n\t\t\t\t\t\terror(Tag.ERR_EXTRA_REGION, subtag);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'extlang':\n\t\t\t\t\tif (found.extlang.length > 1) {\n\t\t\t\t\t\terror(Tag.ERR_EXTRA_EXTLANG, subtag);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'script':\n\t\t\t\t\tif (found.script.length > 1) {\n\t\t\t\t\t\terror(Tag.ERR_EXTRA_SCRIPT, subtag);\n\n\t\t\t\t\t\t// Check if script is same as language suppress-script.\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlanguage = subtags[0];\n\t\t\t\t\t\tif ('language' === language.type()) {\n\t\t\t\t\t\t\tscript = language.script();\n\t\t\t\t\t\t\tif (script && script.format() === subtag.format()) {\n\t\t\t\t\t\t\t\terror(Tag.ERR_SUPPRESS_SCRIPT, subtag);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'variant':\n\t\t\t\t\tif (found.variant.length > 1 && found.variant.some(function (variant) {\n\t\t\t\t\t\treturn variant.format() === subtag.format();\n\t\t\t\t\t})) {\n\t\t\t\t\t\terror(Tag.ERR_DUPLICATE_VARIANT, subtag);\n\t\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tlanguage: [],\n\t\t\textlang: [],\n\t\t\tvariant: [],\n\t\t\tscript: [],\n\t\t\tregion: []\n\t\t});\n\n\t\t// Check for correct order.\n\t\tsubtags.forEach(function (subtag, i, subtags) {\n\t\t\tvar priority = this, next = subtags[i + 1];\n\n\t\t\tif (next && priority[subtag.type()] > priority[next.type()]) {\n\t\t\t\terror(Tag.ERR_WRONG_ORDER, [subtag, next]);\n\t\t\t}\n\t\t}, {\n\t\t\tlanguage: 4,\n\t\t\textlang: 5,\n\t\t\tscript: 6,\n\t\t\tregion: 7,\n\t\t\tvariant: 8\n\t\t});\n\n\t\treturn errors;\n\t}\n\n\ttype () {\n\t\tvar record = this.data.record;\n\n\t\tif (record) {\n\t\t\treturn record.Type;\n\t\t}\n\n\t\treturn 'tag';\n\t}\n\n\tadded () {\n\t\tvar record = this.data.record;\n\n\t\treturn record && record.Added;\n\t}\n\n\tdeprecated () {\n\t\tvar record = this.data.record;\n\n\t\treturn record && record.Deprecated;\n\t}\n\n\tdescriptions () {\n\t\tvar record = this.data.record;\n\n\t\tif (record && record.Description) {\n\t\t\treturn record.Description;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tformat () {\n\t\tvar tag = this.data.tag;\n\n\t\t// Format according to algorithm defined in RFC 5646 section 2.1.1.\n\t\treturn tag.split('-').reduce(function (p, c, i, a) {\n\t\t\tif (i === 0) {\n\t\t\t\treturn c;\n\t\t\t}\n\n\t\t\tif (a[i - 1].length === 1) {\n\t\t\t\treturn p + '-' + c;\n\t\t\t}\n\n\t\t\tswitch (c.length) {\n\t\t\t\tcase 2:\n\t\t\t\t\treturn p + '-' + c.toUpperCase();\n\t\t\t\tcase 4:\n\t\t\t\t\treturn p + '-' + c[0].toUpperCase() + c.substr(1);\n\t\t\t}\n\n\t\t\treturn p + '-' + c;\n\t\t});\n\t}\n}\n\nmodule.exports = Tag;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}